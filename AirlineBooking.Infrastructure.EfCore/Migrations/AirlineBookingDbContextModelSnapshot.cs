// <auto-generated />
using System;
using AirlineBooking.Infrastructure.EfCore;
using AirlineBooking.Infrastructure.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirlineBooking.Infrastructure.EfCore.Migrations
{
    [DbContext(typeof(AirlineBookingDbContext))]
    partial class AirlineBookingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            // Настройка сущности Flight
            modelBuilder.Entity("AirlineBooking.Domain.Model.Flight", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("AircraftType")
                    .HasColumnType("longtext");

                b.Property<string>("ArrivalCity")
                    .HasColumnType("longtext");

                b.Property<DateTime>("ArrivalDate")
                    .HasColumnType("datetime(6)");

                b.Property<string>("DepartureCity")
                    .HasColumnType("longtext");

                b.Property<DateTime>("DepartureDate")
                    .HasColumnType("datetime(6)");

                b.Property<string>("FlightNumber")
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.ToTable("Flights");

                b.HasData(
                    new
                    {
                        Id = 1,
                        AircraftType = "Boeing 737",
                        ArrivalCity = "Москва",
                        ArrivalDate = new DateTime(2025, 3, 1, 14, 30, 0),
                        DepartureCity = "Санкт-Петербург",
                        DepartureDate = new DateTime(2025, 3, 1, 12, 0, 0),
                        FlightNumber = "SU123"
                    },
                    new
                    {
                        Id = 2,
                        AircraftType = "Airbus A320",
                        ArrivalCity = "Лондон",
                        ArrivalDate = new DateTime(2025, 3, 2, 18, 45, 0),
                        DepartureCity = "Париж",
                        DepartureDate = new DateTime(2025, 3, 2, 16, 0, 0),
                        FlightNumber = "AF456"
                    });
            });

            // Настройка сущности Customer
            modelBuilder.Entity("AirlineBooking.Domain.Model.Customer", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("BirthDate")
                    .HasColumnType("datetime(6)");

                b.Property<string>("FullName")
                    .HasColumnType("longtext");

                b.Property<string>("Passport")
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.ToTable("Customers");

                b.HasData(
                    new
                    {
                        Id = 1,
                        BirthDate = new DateTime(1990, 5, 15),
                        FullName = "Иван Иванов",
                        Passport = "AB1234567"
                    },
                    new
                    {
                        Id = 2,
                        BirthDate = new DateTime(1985, 8, 20),
                        FullName = "Мария Петрова",
                        Passport = "CD9876543"
                    });
            });

            // Настройка сущности Booking
            modelBuilder.Entity("AirlineBooking.Domain.Model.Booking", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("CustomerId")
                    .HasColumnType("int");

                b.Property<int>("FlightId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("CustomerId");

                b.HasIndex("FlightId");

                b.ToTable("Bookings");

                b.HasData(
                    new
                    {
                        Id = 1,
                        CustomerId = 1,
                        FlightId = 1
                    },
                    new
                    {
                        Id = 2,
                        CustomerId = 2,
                        FlightId = 2
                    });
            });

            // Настройка связей для сущности Booking
            modelBuilder.Entity("AirlineBooking.Domain.Model.Booking", b =>
            {
                b.HasOne("AirlineBooking.Domain.Model.Customer", "Customer")
                    .WithMany("Bookings")
                    .HasForeignKey("CustomerId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("AirlineBooking.Domain.Model.Flight", "Flight")
                    .WithMany("Bookings")
                    .HasForeignKey("FlightId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Customer");

                b.Navigation("Flight");
            });

            // Настройка навигационных свойств для Flight и Customer
            modelBuilder.Entity("AirlineBooking.Domain.Model.Flight", b =>
            {
                b.Navigation("Bookings");
            });

            modelBuilder.Entity("AirlineBooking.Domain.Model.Customer", b =>
            {
                b.Navigation("Bookings");
            });
#pragma warning restore 612, 618
        }
    }
}